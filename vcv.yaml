input:
  broker:
    inputs:
      - label: ""
        stdin:
          auto_replay_nacks: true
      - label: ""
        client_customer_event:
          mapping: |
            root = {
              "metadata":{
                "message_key": uuid_v4(),
                "created_date": fake("unix_time"),
                "updated_date": fake("unix_time"),
                "outbox_published_date": fake("unix_time"),
                "event_type": ["UPDATE", "CREATE", "DELETE"].index(random_int() % 3),
                "event_type_key_name": "party_key",
                "event_metadata_version": "1.0.0"
              },
              "business_data_payload":{
                "tenant_key": uuid_v4(),
                "party_key": uuid_v4(),
                "system_of_origin": ["EXTERNAL", "INTERNAL"].index(random_int() % 2),
                "name_prefix": fake("title_female"),
                "preferred_name": fake("first_name"),
                "given_name": fake("first_name"),
                "last_name": fake("last_name"),
                "middle_name": fake("first_name"),
                "date_of_birth": fake("date"),
                "date_of_death": [fake("date"), null].index(random_int() % 2),
                "gender": ["FEMALE", "MALE", "OTHER"].index(random_int() % 2),
                "place_of_birth": ["Toronto", "Montréal", "Vancouver", "Calgary", "Edmonton", "Ottawa-Gatineau", "Québec City", "Winnipeg, Manitoba"].index(random_int() % 8),
                "country_of_residence": ["AUS", "CAN", "USA", "GBR"].index(random_int() % 4),
                "login_on_register": [true, false].index(random_int() % 2),
                "created_date": fake("unix_time"),
                "updated_date": fake("unix_time"),
                "status": ["PROVISIONED", "UPDATED", "DELETED"].index(random_int() % 3),
                "citizenship":{
                  "nationalities": ["AUS", "CAN", "USA", "GBR"].index(random_int() % 4),
                  "created_date": fake("unix_time"),
                  "updated_date": fake("unix_time"),
                },
                "attributes":[],
                "customer_marker":[],
                "national_identity_numbers":[
                  {
                    "country_code": ["AU", "CA", "US", "GB"].index(random_int() % 4),
                    "number": uuid_v4(),
                    "created_date": fake("unix_time"),
                    "updated_date": fake("unix_time"),
                  }
                ],
                "purpose_of_business_relationship": null,
                "attributtes": null
              }
            }
          count: 10
pipeline:
  processors:
    - label: ""
      http:
        url: "123"
        verb: POST
        metadata:
          include_prefixes: []
          include_patterns: []
        dump_request_log_level: ""
        oauth:
          enabled: false
          consumer_key: ""
          consumer_secret: ""
          access_token: ""
          access_token_secret: ""
        oauth2:
          enabled: false
          client_key: ""
          client_secret: ""
          token_url: ""
          scopes: []
        basic_auth:
          enabled: false
          username: ""
          password: ""
        jwt:
          enabled: false
          private_key_file: ""
          signing_method: ""
        tls:
          enabled: false
          skip_cert_verify: false
          enable_renegotiation: false
          root_cas: ""
          root_cas_file: ""
          client_certs: []
        extract_headers:
          include_prefixes: []
          include_patterns: []
        timeout: 5s
        retry_period: 1s
        max_retry_backoff: 300s
        retries: 3
        follow_redirects: true
        backoff_on: []
        drop_on: []
        successful_on: []
        disable_http2: false
        batch_as_multipart: false
        parallel: false
    - label: ""
      mapping: jhj
    - label: ""
      try: []
output:
  label: ""
  stdout:
    codec: lines
